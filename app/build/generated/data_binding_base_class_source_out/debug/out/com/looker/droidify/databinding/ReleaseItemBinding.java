// Generated by view binder compiler. Do not edit!
package com.looker.droidify.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textview.MaterialTextView;
import com.looker.droidify.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ReleaseItemBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialTextView added;

  @NonNull
  public final MaterialTextView compatibility;

  @NonNull
  public final MaterialTextView installationStatus;

  @NonNull
  public final MaterialTextView signature;

  @NonNull
  public final MaterialTextView size;

  @NonNull
  public final MaterialTextView source;

  @NonNull
  public final MaterialTextView version;

  private ReleaseItemBinding(@NonNull MaterialCardView rootView, @NonNull MaterialTextView added,
      @NonNull MaterialTextView compatibility, @NonNull MaterialTextView installationStatus,
      @NonNull MaterialTextView signature, @NonNull MaterialTextView size,
      @NonNull MaterialTextView source, @NonNull MaterialTextView version) {
    this.rootView = rootView;
    this.added = added;
    this.compatibility = compatibility;
    this.installationStatus = installationStatus;
    this.signature = signature;
    this.size = size;
    this.source = source;
    this.version = version;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ReleaseItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ReleaseItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.release_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ReleaseItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.added;
      MaterialTextView added = ViewBindings.findChildViewById(rootView, id);
      if (added == null) {
        break missingId;
      }

      id = R.id.compatibility;
      MaterialTextView compatibility = ViewBindings.findChildViewById(rootView, id);
      if (compatibility == null) {
        break missingId;
      }

      id = R.id.installation_status;
      MaterialTextView installationStatus = ViewBindings.findChildViewById(rootView, id);
      if (installationStatus == null) {
        break missingId;
      }

      id = R.id.signature;
      MaterialTextView signature = ViewBindings.findChildViewById(rootView, id);
      if (signature == null) {
        break missingId;
      }

      id = R.id.size;
      MaterialTextView size = ViewBindings.findChildViewById(rootView, id);
      if (size == null) {
        break missingId;
      }

      id = R.id.source;
      MaterialTextView source = ViewBindings.findChildViewById(rootView, id);
      if (source == null) {
        break missingId;
      }

      id = R.id.version;
      MaterialTextView version = ViewBindings.findChildViewById(rootView, id);
      if (version == null) {
        break missingId;
      }

      return new ReleaseItemBinding((MaterialCardView) rootView, added, compatibility,
          installationStatus, signature, size, source, version);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
