// Generated by view binder compiler. Do not edit!
package com.looker.droidify.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.imageview.ShapeableImageView;
import com.google.android.material.textview.MaterialTextView;
import com.looker.droidify.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RepositoryItemBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialTextView repositoryDescription;

  @NonNull
  public final MaterialCardView repositoryItem;

  @NonNull
  public final MaterialTextView repositoryName;

  @NonNull
  public final ShapeableImageView repositoryState;

  private RepositoryItemBinding(@NonNull MaterialCardView rootView,
      @NonNull MaterialTextView repositoryDescription, @NonNull MaterialCardView repositoryItem,
      @NonNull MaterialTextView repositoryName, @NonNull ShapeableImageView repositoryState) {
    this.rootView = rootView;
    this.repositoryDescription = repositoryDescription;
    this.repositoryItem = repositoryItem;
    this.repositoryName = repositoryName;
    this.repositoryState = repositoryState;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static RepositoryItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RepositoryItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.repository_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RepositoryItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.repository_description;
      MaterialTextView repositoryDescription = ViewBindings.findChildViewById(rootView, id);
      if (repositoryDescription == null) {
        break missingId;
      }

      MaterialCardView repositoryItem = (MaterialCardView) rootView;

      id = R.id.repository_name;
      MaterialTextView repositoryName = ViewBindings.findChildViewById(rootView, id);
      if (repositoryName == null) {
        break missingId;
      }

      id = R.id.repository_state;
      ShapeableImageView repositoryState = ViewBindings.findChildViewById(rootView, id);
      if (repositoryState == null) {
        break missingId;
      }

      return new RepositoryItemBinding((MaterialCardView) rootView, repositoryDescription,
          repositoryItem, repositoryName, repositoryState);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
