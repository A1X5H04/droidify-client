// Generated by view binder compiler. Do not edit!
package com.looker.droidify.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.imageview.ShapeableImageView;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textview.MaterialTextView;
import com.looker.droidify.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class EditRepositoryBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final TextInputEditText address;

  @NonNull
  public final ShapeableImageView addressMirror;

  @NonNull
  public final TextInputEditText fingerprint;

  @NonNull
  public final NestedScrollView list;

  @NonNull
  public final LinearLayoutCompat overlay;

  @NonNull
  public final TextInputEditText password;

  @NonNull
  public final MaterialTextView skip;

  @NonNull
  public final TextInputEditText username;

  private EditRepositoryBinding(@NonNull FrameLayout rootView, @NonNull TextInputEditText address,
      @NonNull ShapeableImageView addressMirror, @NonNull TextInputEditText fingerprint,
      @NonNull NestedScrollView list, @NonNull LinearLayoutCompat overlay,
      @NonNull TextInputEditText password, @NonNull MaterialTextView skip,
      @NonNull TextInputEditText username) {
    this.rootView = rootView;
    this.address = address;
    this.addressMirror = addressMirror;
    this.fingerprint = fingerprint;
    this.list = list;
    this.overlay = overlay;
    this.password = password;
    this.skip = skip;
    this.username = username;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static EditRepositoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static EditRepositoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.edit_repository, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static EditRepositoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.address;
      TextInputEditText address = ViewBindings.findChildViewById(rootView, id);
      if (address == null) {
        break missingId;
      }

      id = R.id.address_mirror;
      ShapeableImageView addressMirror = ViewBindings.findChildViewById(rootView, id);
      if (addressMirror == null) {
        break missingId;
      }

      id = R.id.fingerprint;
      TextInputEditText fingerprint = ViewBindings.findChildViewById(rootView, id);
      if (fingerprint == null) {
        break missingId;
      }

      id = android.R.id.list;
      NestedScrollView list = ViewBindings.findChildViewById(rootView, id);
      if (list == null) {
        break missingId;
      }

      id = R.id.overlay;
      LinearLayoutCompat overlay = ViewBindings.findChildViewById(rootView, id);
      if (overlay == null) {
        break missingId;
      }

      id = R.id.password;
      TextInputEditText password = ViewBindings.findChildViewById(rootView, id);
      if (password == null) {
        break missingId;
      }

      id = R.id.skip;
      MaterialTextView skip = ViewBindings.findChildViewById(rootView, id);
      if (skip == null) {
        break missingId;
      }

      id = R.id.username;
      TextInputEditText username = ViewBindings.findChildViewById(rootView, id);
      if (username == null) {
        break missingId;
      }

      return new EditRepositoryBinding((FrameLayout) rootView, address, addressMirror, fingerprint,
          list, overlay, password, skip, username);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
